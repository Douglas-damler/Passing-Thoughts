{"version":3,"sources":["reportWebVitals.js","utilities.js","AddThoughtsForm.js","Thoughts.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getNewExpirationTime","Date","now","currentId","generateNewId","results","AddThoughtsForm","props","useState","text","setText","onSubmit","event","preventDefault","length","thought","id","expiresAt","addThought","type","placeholder","value","onChange","target","Thoughts","removeThought","useEffect","timeRemaining","timeout","setTimeout","clearTimeout","onClick","aria-label","className","App","thoughts","setThoughts","taskIdToRemove","filter","prev","map","ReactDOM","render","document","getElementById"],"mappings":"6LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCPDQ,EAAuB,WAChC,OAAOC,KAAKC,MAAQ,MAGpBC,EAAY,EACHC,EAAgB,WACzB,IAAMC,EAAUF,EAEhB,OADAA,GAAa,EACNE,G,OCLI,SAASC,EAAgBC,GACpC,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OACI,gCACI,8CACA,uBAAMC,SAfO,SAACC,GAElB,GADAA,EAAMC,iBACc,IAAhBJ,EAAKK,OAAc,CACnB,IAAMC,EAAU,CACZN,KAAMA,EACNO,GAAIZ,IACJa,UAAWjB,KAEfO,EAAMW,WAAWH,GACjBL,EAAQ,MAMR,UACI,uBACAS,KAAK,OACLC,YAAY,oBACZC,MAAOZ,EACPa,SAxBI,SAACV,GACbF,EAAQE,EAAMW,OAAOF,UAyBb,uBAAOF,KAAK,SAASE,MAAM,cC9B5B,SAASG,EAASjB,GAC7B,IAAOQ,EAA4BR,EAA5BQ,QAASU,EAAmBlB,EAAnBkB,cAEjBC,qBAAU,WACN,IAAMC,EAAgBZ,EAAQE,UAAYhB,KAAKC,MACzC0B,EAAUC,YAAW,WAC1BJ,EAAcV,EAAQC,MACpBW,GAEH,OAAO,WACHG,aAAaF,MAElB,CAACb,EAASU,IAKZ,OACI,+BACI,wBACIM,QANgB,WACxBN,EAAcV,EAAQC,KAMdgB,aAAW,qBACXC,UAAU,gBAHd,kBAOA,8BACKlB,EAAQN,U,MCxBV,SAASyB,IACrB,MAAgC1B,mBAAS,CACtC,CACGC,KAAM,qBACNO,GAAIZ,IACJa,UAAWjB,KAEd,CACGS,KAAM,yCACNO,GAAIZ,IACJa,UAAWjB,OATjB,mBAAOmC,EAAP,KAAiBC,EAAjB,KAmBMX,EAAgB,SAACY,GACpBD,GAAY,kBACTD,EAASG,QAAO,SAACvB,GAAD,OACbA,EAAQC,KAAOqB,SAKxB,OACG,gCACG,cAAC,EAAD,CAAgBnB,WAdH,SAACH,GACjBqB,GAAY,SAACG,GAAD,OAAWxB,GAAX,mBAAuBwB,UAchC,6BACIJ,EAASK,KAAI,SAACzB,GAAD,OACX,cAACS,EAAD,CAAUT,QAASA,EAASU,cAAeA,YCjC1DgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SACjDrD,M","file":"static/js/main.15b30acb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const getNewExpirationTime = () => {\r\n    return Date.now() + 15 * 1000;\r\n}\r\n\r\nlet currentId = 0;\r\nexport const generateNewId = () => {\r\n    const results = currentId;\r\n    currentId += 1;\r\n    return results;\r\n}","import React, { useState } from 'react';\r\nimport { getNewExpirationTime, generateNewId } from './utilities';\r\n\r\nexport default function AddThoughtsForm(props) {\r\n    const [text, setText] = useState('');\r\n\r\n\r\n    const addText = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (text.length !== 0) {\r\n            const thought = {\r\n                text: text,\r\n                id: generateNewId(),\r\n                expiresAt: getNewExpirationTime()\r\n            }\r\n            props.addThought(thought);\r\n            setText('');\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Add Thoughts</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"Add your thoughts\"\r\n                value={text}\r\n                onChange={addText}\r\n                />\r\n                <input type=\"submit\" value=\"Add\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\n\r\n\r\nexport default function Thoughts(props) {\r\n    const {thought, removeThought  } = props;\r\n\r\n   useEffect(() => {\r\n       const timeRemaining = thought.expiresAt - Date.now();\r\n       const timeout = setTimeout(() => {\r\n        removeThought(thought.id);\r\n       }, timeRemaining);\r\n\r\n       return () => {\r\n           clearTimeout(timeout);\r\n       }\r\n   }, [thought, removeThought]);\r\n\r\n    const handleRemoveThought = () => {\r\n        removeThought(thought.id);\r\n    }\r\n    return(\r\n        <li>\r\n            <button\r\n                onClick={handleRemoveThought} \r\n                aria-label=\"Remove Task Button\"\r\n                className=\"Remove-button\"\r\n                >\r\n                &times;\r\n                </button>\r\n            <div>\r\n                {thought.text}\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport AddThoughtFrom from './AddThoughtsForm';\r\nimport Thoughts from './Thoughts';\r\nimport './App.css';\r\nimport { getNewExpirationTime, generateNewId } from './utilities';\r\n\r\nexport default function App() {\r\n   const [thoughts, setThoughts] = useState([\r\n      {\r\n         text: \"I feel like coding\",\r\n         id: generateNewId(),\r\n         expiresAt: getNewExpirationTime()\r\n      },\r\n      {\r\n         text: \"I can accomplish big things with react\",\r\n         id: generateNewId(),\r\n         expiresAt: getNewExpirationTime()\r\n      }\r\n   ]);\r\n\r\n   \r\n\r\n   const addThought = (thought) => {\r\n      setThoughts((prev) => [thought, ...prev])\r\n   }\r\n\r\n   const removeThought = (taskIdToRemove) => {\r\n      setThoughts(() => \r\n         thoughts.filter((thought) =>\r\n            thought.id !== taskIdToRemove\r\n         )\r\n      )\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <AddThoughtFrom addThought={addThought} />\r\n         <ul>\r\n            {thoughts.map((thought) => (\r\n               <Thoughts thought={thought} removeThought={removeThought} />\r\n            ))}\r\n         </ul>\r\n      </div>\r\n   )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}